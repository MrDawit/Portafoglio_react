{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mamba\\\\Documents\\\\GITHUB\\\\Portafoglio_react\\\\client\\\\src\\\\components\\\\Tilt\\\\Tilt.js\";\nimport React, { Component } from 'react'; // import tiltForeground from '../../assets/img/Globe.jpg';\n\nimport Spacer from '../Spacer/'; //  import 'react-tilt';\n\nimport { findDOMNode } from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  minHeight: '100vh',\n  maxHeight: '150vh'\n};\n\nclass Tilt extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style: {}\n    };\n    const defaultSettings = {\n      reverse: false,\n      max: 35,\n      perspective: 1000,\n      easing: 'cubic-bezier(.03,.98,.52,.99)',\n      scale: '1.1',\n      speed: '1000',\n      transition: true,\n      axis: null,\n      reset: true\n    };\n    this.width = null;\n    this.height = null;\n    this.left = null;\n    this.top = null;\n    this.transitionTimeout = null;\n    this.updateCall = null;\n    this.element = null;\n    this.settings = { ...defaultSettings,\n      ...this.props.options\n    };\n    this.reverse = this.settings.reverse ? -1 : 1;\n    this.handleMouseEnter = this.handleMouseEnter.bind(this, this.props.handleMouseEnter);\n    this.handleMouseMove = this.handleMouseMove.bind(this, this.props.handleMouseMove);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this, this.props.handleMouseLeave);\n  }\n\n  componentDidMount() {\n    this.element = findDOMNode(this);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.transitionTimeout);\n    cancelAnimationFrame(this.updateCall);\n  }\n\n  handleMouseEnter(cb = () => {}, e) {\n    this.updateElementPosition();\n    this.setState(prevState => ({\n      style: { ...prevState.style\n      }\n    }));\n    this.setTransition();\n    return cb(e);\n  }\n\n  reset() {\n    window.requestAnimationFrame(() => {\n      console.log('RESETTING TRANSFORM STATE', `perspective(${this.settings.perspective}px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)`);\n      this.setState(prevState => ({\n        style: { ...prevState.style,\n          transform: `perspective(${this.settings.perspective}px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)`\n        }\n      }));\n    });\n  }\n\n  handleMouseMove(cb = () => {}, e) {\n    e.persist();\n\n    if (this.updateCall !== null) {\n      window.cancelAnimationFrame(this.updateCall);\n    }\n\n    this.event = e;\n    this.updateCall = requestAnimationFrame(this.update.bind(this, e));\n    return cb(e);\n  }\n\n  setTransition() {\n    clearTimeout(this.transitionTimeout);\n    console.log('SET TRANSITION', `Speed: ${this.settings.speed}ms Easing: ${this.settings.easing}`);\n    this.setState(prevState => ({\n      style: { ...prevState.style,\n        transition: `${this.settings.speed}ms ${this.settings.easing}`\n      }\n    }));\n    this.transitionTimeout = setTimeout(() => {\n      console.log('TRANSITION COMPLETE');\n      this.setState(prevState => ({\n        style: { ...prevState.style,\n          transition: ''\n        }\n      }));\n    }, this.settings.speed);\n  }\n\n  handleMouseLeave(cb = () => {}, e) {\n    this.setTransition();\n\n    if (this.settings.reset) {\n      this.reset();\n    }\n\n    return cb(e);\n  }\n\n  getValues(e) {\n    const x = (e.nativeEvent.clientX - this.left) / this.width;\n    const y = (e.nativeEvent.clientY - this.top) / this.height;\n\n    const _x = Math.min(Math.max(x, 0), 1);\n\n    const _y = Math.min(Math.max(y, 0), 1);\n\n    const tiltX = (this.reverse * (this.settings.max / 2 - _x * this.settings.max)).toFixed(2);\n\n    const tiltY = (this.reverse * (_y * this.settings.max - this.settings.max / 2)).toFixed(2);\n    const percentageX = _x * 100;\n    const percentageY = _y * 100;\n    console.log('JUST GOT NEW VALUES', `X: ${x} Y: ${y} -- TILT X: ${tiltX} TILT Y: ${tiltY} -- TILT X%: ${percentageX} TILT Y%: ${percentageY}`);\n    console.log('Notice how X turned into percentageX.');\n    return {\n      tiltX,\n      tiltY,\n      percentageX,\n      percentageY\n    };\n  }\n\n  updateElementPosition() {\n    const rect = this.element.getBoundingClientRect();\n    this.width = this.element.offsetWidth;\n    this.height = this.element.offsetHeight;\n    this.left = rect.left;\n    this.top = rect.top;\n  }\n\n  update(e) {\n    let values = this.getValues(e);\n    console.log('VALUES', values);\n    console.log('NEW CSS TRANSFORM VALUES', `perspective(${this.settings.perspective}px) rotateX(${this.settings.axis === 'x' ? 0 : values.tiltY}deg) rotateY(${this.settings.axis === 'y' ? 0 : values.tiltX}deg) scale3d(${this.settings.scale}, ${this.settings.scale}, ${this.settings.scale})`);\n    this.setState(prevState => ({\n      style: { ...prevState.style,\n        transform: `perspective(${this.settings.perspective}px) rotateX(${this.settings.axis === 'x' ? 0 : values.tiltY}deg) rotateY(${this.settings.axis === 'y' ? 0 : values.tiltX}deg) scale3d(${this.settings.scale}, ${this.settings.scale}, ${this.settings.scale})`\n      }\n    }));\n    this.updateCall = null;\n  }\n\n  render() {\n    const style = { ...this.props.style,\n      ...this.state.style\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style,\n        onMouseEnter: this.handleMouseEnter,\n        onMouseMove: this.handleMouseMove,\n        onMouseLeave: this.handleMouseLeave,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: tiltForeground,\n          alt: \"tiltForegroundImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Tilt;","map":{"version":3,"sources":["C:/Users/Mamba/Documents/GITHUB/Portafoglio_react/client/src/components/Tilt/Tilt.js"],"names":["React","Component","Spacer","findDOMNode","styles","display","flexDirection","justifyContent","alignItems","minHeight","maxHeight","Tilt","constructor","props","state","style","defaultSettings","reverse","max","perspective","easing","scale","speed","transition","axis","reset","width","height","left","top","transitionTimeout","updateCall","element","settings","options","handleMouseEnter","bind","handleMouseMove","handleMouseLeave","componentDidMount","componentWillUnmount","clearTimeout","cancelAnimationFrame","cb","e","updateElementPosition","setState","prevState","setTransition","window","requestAnimationFrame","console","log","transform","persist","event","update","setTimeout","getValues","x","nativeEvent","clientX","y","clientY","_x","Math","min","_y","tiltX","toFixed","tiltY","percentageX","percentageY","rect","getBoundingClientRect","offsetWidth","offsetHeight","values","render","tiltForeground"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import tiltForeground from '../../assets/img/Globe.jpg';\r\nimport Spacer from '../Spacer/'\r\n//  import 'react-tilt';\r\nimport {findDOMNode} from 'react-dom';\r\n\r\n\r\nconst styles = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  minHeight: '100vh',\r\n  maxHeight: '150vh'\r\n}\r\nclass Tilt extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      style: {}\r\n    }  \r\n    const defaultSettings = {\r\n      reverse: false,\r\n      max: 35,\r\n      perspective: 1000,\r\n      easing: 'cubic-bezier(.03,.98,.52,.99)',\r\n      scale: '1.1',\r\n      speed: '1000',\r\n      transition: true,\r\n      axis: null,\r\n      reset: true\r\n    }  \r\n    this.width = null\r\n    this.height = null\r\n    this.left = null\r\n    this.top = null\r\n    this.transitionTimeout = null\r\n    this.updateCall = null\r\n    this.element = null\r\n    this.settings = {\r\n      ...defaultSettings,\r\n      ...this.props.options,\r\n    }\r\n    this.reverse = this.settings.reverse ? -1 : 1  \r\n    this.handleMouseEnter = this.handleMouseEnter.bind(this, this.props.handleMouseEnter)\r\n    this.handleMouseMove = this.handleMouseMove.bind(this, this.props.handleMouseMove)\r\n    this.handleMouseLeave = this.handleMouseLeave.bind(this, this.props.handleMouseLeave)\r\n  }\r\n  componentDidMount() {\r\n    this.element = findDOMNode(this)\r\n  }\r\n  componentWillUnmount() {\r\n   clearTimeout(this.transitionTimeout)\r\n   cancelAnimationFrame(this.updateCall)\r\n  }\r\n  handleMouseEnter(cb = () => { }, e) {\r\n    this.updateElementPosition()  \r\n    this.setState(prevState => ({\r\n      style: {\r\n        ...prevState.style,\r\n      }\r\n    }))  \r\n    this.setTransition()\r\n    return cb(e)\r\n    }\r\n    reset() {\r\n    window.requestAnimationFrame(() => {\r\n      console.log('RESETTING TRANSFORM STATE', `perspective(${this.settings.perspective}px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)`)\r\n          this.setState(prevState => ({\r\n        style: {\r\n          ...prevState.style,\r\n          transform: `perspective(${this.settings.perspective}px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)`,\r\n        }\r\n      }))\r\n    })\r\n  }\r\n  handleMouseMove(cb = () => { }, e) {\r\n    e.persist() \r\n    if (this.updateCall !== null) {\r\n      window.cancelAnimationFrame(this.updateCall)\r\n    }  \r\n    this.event = e\r\n    this.updateCall = requestAnimationFrame(this.update.bind(this, e))  \r\n    return cb(e)\r\n  }\r\n  setTransition() {\r\n   clearTimeout(this.transitionTimeout)\r\n    console.log('SET TRANSITION', `Speed: ${this.settings.speed}ms Easing: ${this.settings.easing}`)\r\n   this.setState(prevState => ({\r\n     style: {\r\n       ...prevState.style,\r\n       transition: `${this.settings.speed}ms ${this.settings.easing}`,\r\n     }\r\n   }))\r\n   this.transitionTimeout = setTimeout(() => {\r\n    console.log('TRANSITION COMPLETE')\r\n      this.setState(prevState => ({\r\n        style: {\r\n          ...prevState.style,\r\n          transition: '',\r\n        }\r\n      }))\r\n    }, this.settings.speed)\r\n  }\r\n  handleMouseLeave(cb = () => { }, e) {\r\n    this.setTransition()  \r\n    if (this.settings.reset) {\r\n      this.reset()\r\n    }  \r\n    return cb(e)\r\n  }\r\n  getValues(e) {\r\n    const x = (e.nativeEvent.clientX - this.left) / this.width\r\n    const y = (e.nativeEvent.clientY - this.top) / this.height\r\n    const _x = Math.min(Math.max(x, 0), 1)\r\n    const _y = Math.min(Math.max(y, 0), 1)  \r\n    const tiltX = (this.reverse * (this.settings.max / 2 - _x * this.settings.max)).toFixed(2)\r\n    const tiltY = (this.reverse * (_y * this.settings.max - this.settings.max / 2)).toFixed(2)  \r\n    const percentageX = _x * 100\r\n    const percentageY = _y * 100  \r\n    console.log('JUST GOT NEW VALUES', `X: ${x} Y: ${y} -- TILT X: ${tiltX} TILT Y: ${tiltY} -- TILT X%: ${percentageX} TILT Y%: ${percentageY}`)\r\n    console.log('Notice how X turned into percentageX.')  \r\n    return {\r\n      tiltX,\r\n      tiltY,\r\n      percentageX,\r\n      percentageY,\r\n    }\r\n  }\r\n  updateElementPosition() {\r\n    const rect = this.element.getBoundingClientRect()\r\n    this.width = this.element.offsetWidth\r\n    this.height = this.element.offsetHeight\r\n    this.left = rect.left\r\n    this.top = rect.top\r\n  }\r\n  update(e) {\r\n    let values = this.getValues(e)\r\n    console.log('VALUES', values)  \r\n    console.log('NEW CSS TRANSFORM VALUES', `perspective(${this.settings.perspective}px) rotateX(${this.settings.axis === 'x' ? 0 : values.tiltY}deg) rotateY(${this.settings.axis === 'y' ? 0 : values.tiltX}deg) scale3d(${this.settings.scale}, ${this.settings.scale}, ${this.settings.scale})`)\r\n    this.setState(prevState => ({\r\n      style: {\r\n        ...prevState.style,\r\n        transform: `perspective(${this.settings.perspective}px) rotateX(${this.settings.axis === 'x' ? 0 : values.tiltY}deg) rotateY(${this.settings.axis === 'y' ? 0 : values.tiltX}deg) scale3d(${this.settings.scale}, ${this.settings.scale}, ${this.settings.scale})`,\r\n      }\r\n    }))  \r\n    this.updateCall = null\r\n  }\r\n  render() {\r\n    const style = {\r\n      ...this.props.style,\r\n      ...this.state.style\r\n    }  \r\n    return (\r\n      <div style={styles}>\r\n        <div\r\n          style={style}\r\n          onMouseEnter={this.handleMouseEnter}\r\n          onMouseMove={this.handleMouseMove}\r\n          onMouseLeave={this.handleMouseLeave}\r\n        >\r\n          <img src={tiltForeground} alt=\"tiltForegroundImage\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Tilt"]},"metadata":{},"sourceType":"module"}